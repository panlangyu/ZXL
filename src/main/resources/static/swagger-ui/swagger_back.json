{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore"
  },
  "host": "127.0.0.1:8082",
  "basePath": "/v1/api",
  "tags": [
    {
      "name": "wallet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "contract",
      "description": "Operations about user",
      "externalDocs": {
        "description": "合约操作接口",
        "url": "http://wichat.io/"
      }
    },
    {
      "name": "Authority",
      "description": "Operations about user",
      "externalDocs": {
        "description": "合约操作接口",
        "url": "http://wichat.io/"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/wallet/createSeeds": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Add a new seeds to the store",
        "description": "",
        "operationId": "seeds",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/wallet/createAddress/{type}/{userId}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "string",
            "default": "ETH"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "integer",
            "format": "int64",
            "default": 61
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/wallet/balance/{type}/{address}/{userId}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "path",
            "description": "Updated name of the pet",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Updated status of the pet",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/wallet/balance/transaction/{type}/{userId}/{from}/{to}/{value}/{gas}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "transactions",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "string",
            "default": "ETH"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Updated name of the pet",
            "required": true,
            "type": "string",
            "default": 1
          },
          {
            "name": "from",
            "in": "path",
            "description": "Updated status of the pet",
            "required": true,
            "type": "string",
            "default": "0x6e3a2b3e0cac80899374183d9f93fcc4009c1163"
          },
          {
            "name": "to",
            "in": "path",
            "description": "Updated status of the pet",
            "required": true,
            "type": "string",
            "default": "0xa91dc6a5563ab6398b945df3017e5dd73d717f82"
          },
          {
            "name": "value",
            "in": "path",
            "description": "Updated status of the pet",
            "required": true,
            "type": "string",
            "default": 0.000002
          },
          {
            "name": "gas",
            "in": "path",
            "description": "Updated status of the pet",
            "required": true,
            "type": "string",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/wallet/balance/transaction/record/{type}/{userId}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "record",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "string",
            "default": "ETH"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "integer",
            "default": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/wallet/balance/transaction/record/detail/{type}/{userId}/{tx}": {
      "get": {
        "tags": [
          "wallet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "detail",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "string",
            "default": "ETH"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "integer",
            "default": 1
          },
          {
            "name": "tx",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "string",
            "default": "0x5e702d5c2d64a7b8425ffd316dd418b3dc96d7f8669f391598beda3aa5c2afed"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/saveUserInfo/{info}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Add a new seeds to the store",
        "description": "",
        "operationId": "saveUserInfo",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "info",
            "in": "path",
            "description": "string of pet that needs to be updated",
            "required": true,
            "type": "string",
            "items": {
              "type": "string"
            },
            "default": "{\"machineId\":\"qwertyuiop\",\"machinePW\":\"930517\",\"transactionPW\":\"ADINKING93@\",\"seeds\":\"legal then leaf humor nominee solid journey when inch addict rapid main\"}"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/findUserInfo/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "findUserInfo",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "find user info...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/transaction/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "transaction",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user/findSeeds/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "operationId": "findSeeds",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "find user info...",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/contract/deploy/{name}/{symbol}/{supply}/{userId}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Finds Pets by tags",
        "description": "部署新合约",
        "operationId": "deploy",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "合约名称",
            "required": true,
            "type": "string",
            "default": "嫩模币"
          },
          {
            "name": "symbol",
            "in": "path",
            "description": "合约简称",
            "required": true,
            "type": "string",
            "default": "NMB"
          },
          {
            "name": "supply",
            "in": "path",
            "description": "数量",
            "required": true,
            "type": "string",
            "default": 10000000
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string",
            "default": 63
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/contract/queryByUser/{userid}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Finds Pets by tags",
        "description": "查询用户关联的合约",
        "operationId": "queryByUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string",
            "default": 63
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/contract/queryBalance/{contractAddr}/{fromAddr}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Finds Pets by tags",
        "description": "查询用户关联的合约",
        "operationId": "queryBalance",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractAddr",
            "in": "path",
            "description": "合约地址",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromAddr",
            "in": "path",
            "description": "用户钱包地址",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/contract/transfer/{type}/{contractAddr}/{uderId}/{toAddr}/{sum}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Finds Pets by tags",
        "description": "合约转账",
        "operationId": "transfer",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "合约简称",
            "required": true,
            "type": "string",
            "default": null
          },
          {
            "name": "contractAddr",
            "in": "path",
            "description": "合约地址",
            "required": true,
            "type": "string",
            "default": null
          },
          {
            "name": "uderId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string",
            "default": null
          },
          {
            "name": "toAddr",
            "in": "path",
            "description": "收帐用户的钱包地址",
            "required": true,
            "type": "string",
            "default": null
          },
          {
            "name": "sum",
            "in": "path",
            "description": "转账数量",
            "required": true,
            "type": "string",
            "default": null
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/contract/contractUser/{contractAddr}/{userId}": {
      "get": {
        "tags": [
          "contract"
        ],
        "summary": "Finds Pets by tags",
        "description": "用户通过合约地址绑定新合约",
        "operationId": "contract",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractAddr",
            "in": "path",
            "description": "合约地址",
            "required": true,
            "type": "string",
            "default": "0xf3FfEc0bCf73E258697C901a6c0502f8021272Cb"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string",
            "default": 61
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/saveAuthCode/{authCode}/{sum}": {
      "get": {
        "tags": [
          "Authority"
        ],
        "summary": "Finds Pets by tags",
        "description": "批量创建授权码",
        "operationId": "saveAuthCode",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "authCode",
            "in": "path",
            "description": "授权码管理组code",
            "required": true,
            "type": "string",
            "default": "HUC"
          },
          {
            "name": "sum",
            "in": "path",
            "description": "生成授权码数量",
            "required": true,
            "type": "string",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/queryAuthCode/{code}": {
      "get": {
        "tags": [
          "Authority"
        ],
        "summary": "Finds Pets by tags",
        "description": "查询授权码",
        "operationId": "queryAuthCode",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "authCode",
            "in": "path",
            "description": "授权码",
            "required": true,
            "type": "string",
            "default": "456"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/auth/bindingAuthCode/{userId}/{machineId}/{code}": {
      "get": {
        "tags": [
          "Authority"
        ],
        "summary": "Finds Pets by tags",
        "description": "用户绑定授权码",
        "operationId": "bindingAuthCode",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "string",
            "default": "1"
          },
          {
            "name": "machineId",
            "in": "path",
            "description": "设备ID",
            "required": true,
            "type": "string",
            "default": "2"
          },
          {
            "name": "code",
            "in": "path",
            "description": "授权码",
            "required": true,
            "type": "string",
            "default": "456"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}